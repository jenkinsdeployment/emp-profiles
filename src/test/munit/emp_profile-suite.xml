<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="emp_profile-suite.xml" />
	<munit:test name="get:\status:emp_profile-config-test" doc:id="e9a9e198-0635-4ba3-a7df-a5580dae9e19" ignore="true">
		<munit:behavior >
			<munit-tools:spy doc:name="Spy Transform Message" doc:id="4455e132-fa48-47d8-9575-05638864c4d0" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="94a5e58f-c766-4565-96c6-f7c670ec171e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="ece33881-ba9c-405d-a466-0351bbad7b8f" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import getstatusempprofileconfigtest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="bb0e2e6e-7cda-4a95-b225-785a89794c67" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import getstatusempprofileconfigtest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="3cecef2b-b08a-4085-8ad6-bc06d66f32b3" >
				<munit:payload value="#[readUrl('classpath://getstatusempprofileconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getstatusempprofileconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getstatusempprofileconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\status:emp_profile-config" doc:id="0120c315-4ba1-4bec-94bd-be6dd62176a1" name="get:\status:emp_profile-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8aed9184-ff17-4cac-98c0-2e1716f7185f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getstatusempprofileconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="48abd9cd-dbc8-4987-b052-d73083d21435" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="94a5e58f-c766-4565-96c6-f7c670ec171e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="PATCH_200" doc:id="c950e66c-6fd0-4161-a433-68c75c08366f" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="aa08d005-8d29-4417-9b1b-008f08e5c3e4" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="28719cfb-82b0-4cbb-8ee7-77d25a8e21fc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://PATCH200\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://PATCH200\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f66c3d80-0b5f-46f3-ba1d-1a5a304785f2" >
				<munit:payload value="#[output application/json --- readUrl('classpath://PATCH200\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://PATCH200\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://PATCH200\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\emp\(empId):application\json:emp_profile-config" doc:id="e76f166d-cb98-4639-a891-7480879bd64e" name="patch:\emp\(empId):application\json:emp_profile-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6d9cb47e-5191-4055-9709-b43e88bcc7f7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import PATCH200::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify call" doc:id="75ab83f6-2602-45d8-a33f-3f04829d54f4" processor="salesforce:upsert" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="28719cfb-82b0-4cbb-8ee7-77d25a8e21fc" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="GET_LIST" doc:id="1c6e9d6f-4c79-429d-acce-082d329cda32" timeOut="200000" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="a984b70a-2352-4309-801b-83d2f34e66e6" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1983b7ef-9b08-4605-9daf-469d8e4ce92b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://GETLIST\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://GETLIST\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9d00c01c-d1ea-4890-ab9b-9b8e2409d16a" >
				<munit:payload value="#[readUrl('classpath://GETLIST\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://GETLIST\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://GETLIST\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\emp:emp_profile-config" doc:id="1a5cbfc7-eedf-43ac-a0d8-58888069c1bd" name="get:\emp:emp_profile-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2641e047-fd92-43d5-99db-8d1c29cd4e34" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GETLIST::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify call" doc:id="46b47ad4-1e07-449e-951e-6881518f8dd5" processor="salesforce:query" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1983b7ef-9b08-4605-9daf-469d8e4ce92b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="GET_200" doc:id="7fd7720d-fddf-4255-bcdf-b19d40cc29c9" timeOut="200000" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="c319733d-452e-465c-976d-d9754ec09bb3" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c5e0236b-1418-457c-af26-1f60898e9064" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://GET200\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://GET200\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c83a56c7-e68b-48b7-aaef-98a7dfbb36ca" >
				<munit:payload value="#[readUrl('classpath://GET200\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://GET200\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://GET200\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\emp\(empId):emp_profile-config" doc:id="e2faf113-9812-4eae-a592-7c4ba8df87cc" name="get:\emp\(empId):emp_profile-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d28174b3-f7f4-42db-890f-b4ccaa5e0047" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GET200::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify call" doc:id="7e322ae7-a7e5-4fa6-9399-8c539fd3ba3c" processor="salesforce:query" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c5e0236b-1418-457c-af26-1f60898e9064" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="POST200" doc:id="176793ba-25e4-48cb-8796-f3a3640c51e6" timeOut="200000" ignore="true">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="a7994bb8-f95b-435c-8ef3-22003ba1e7e1" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0a99324-8b96-4ae9-8396-e0cb9d1d9c5e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://POST200\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://POST200\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6b22398b-e4ea-49ba-81f1-7081cfba75c2" >
				<munit:payload value="#[output application/json --- readUrl('classpath://POST200\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://POST200\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://POST200\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\emp:application\json:emp_profile-config" doc:id="4021a604-871a-441e-a46c-3ffcb7778b32" name="post:\emp:application\json:emp_profile-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9373db4e-b112-4c48-b0ae-db3a15803970" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import POST200::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify call" doc:id="691f6003-04d0-4f85-8078-09af4e576bd8" processor="salesforce:create" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c0a99324-8b96-4ae9-8396-e0cb9d1d9c5e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
